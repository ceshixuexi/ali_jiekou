{"name": "test_request_declartion", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <test_request.TestRequest object at 0x0000023099B8E630>\n\n    def test_request_declartion(self):\n        request_data_list = analyze_file('../data/ali_request.json')\n        data = dict()\n        print(\"推送数据一共有{}条\".format(len(request_data_list)))\n        for every_data in request_data_list:\n            url = every_data['url']\n            data['sign'] = every_data['sign']\n            data['appkey'] = every_data['appkey']\n            data['request'] = json.dumps(every_data['request'])\n            print(\"推送报关接口的数据为%s\\n\"%data)\n            response = requests.post(url=url, json=data)\n            result = response.json()['success']\n            logger.info('开始新一轮测试!')\n            if result:\n                logger.info('接口访问成功!')\n                print(\"接口访问成功，接口返回结果为\\n\", response.json())\n                sql_test=con(every_data['request']['aliOrderNo'])\n                for i in range(len(sql_test)):\n                    print(\"数据库一共查到了%s条数据，这是第%s条数据的比对结果\" % (len(sql_test),i+1))\n                    if every_data['request']['aliOrderNo']==sql_test[i][0]:\n                        logger.info('aliOrderNo相等!')\n                        print(\"aliOrderNo相等,推送字段为%s,数据库为%s\"%(every_data['request']['aliOrderNo'],sql_test[i][0]))\n                    else:\n                        logger.info('aliOrderNo不相等!')\n                        print(\"aliOrderNo不相等,推送字段为%s,数据库为%s\" % (every_data['request']['aliOrderNo'], sql_test[i][0]))\n                    if every_data['request']['notifyInfoCode'] == sql_test[i][1]:\n                        logger.info('notifyInfoCode相等!')\n                        print(\"notifyInfoCode相等,推送字段为%s,数据库为%s\" % (every_data['request']['notifyInfoCode'], sql_test[i][1]))\n                    else:\n                        logger.info('notifyInfoCode不相等!')\n                        print(\"notifyInfoCode不相等,推送字段为%s,数据库为%s\" % (every_data['request']['notifyInfoCode'], sql_test[i][1]))\n                    if every_data['request']['notifyEventTime'] == sql_test[i][2]:\n                        logger.info('notifyEventTime相等!')\n                        print(\"notifyEventTime相等,推送字段为%s,数据库为%s\" % (every_data['request']['notifyEventTime'], sql_test[i][2]))\n                    else:\n                        logger.info('notifyEventTime不相等!')\n                        print(\"notifyEventTime不相等,推送字段为%s,数据库为%s\" % (every_data['request']['notifyEventTime'], sql_test[i][2]))\n    \n                    if every_data['request']['content'][i]['fileType'] == sql_test[i][3]:\n                        logger.info('fileType相等!')\n                        print(\"fileType相等,推送字段为%s,数据库为%s\" % (every_data['request']['content'][i]['fileType'], sql_test[i][3]))\n                    else:\n                        logger.info('fileType不相等!')\n                        print(\"fileType不相等,推送字段为%s,数据库为%s\" % (every_data['request']['content'][i]['fileType'], sql_test[i][3]))\n                    if every_data['request']['content'][i]['fileName'] == sql_test[i][4]:\n                        logger.info('fileName相等!')\n                        print(\"fileName相等,推送字段为%s,数据库为%s\" % (every_data['request']['content'][i]['fileName'], sql_test[i][4]))\n                    else:\n                        logger.info('fileName不相等!')\n                        print(\"fileName不相等,推送字段为%s,数据库为%s\" % (every_data['request']['content'][i]['fileName'], sql_test[i][4]))\n                    if every_data['request']['content'][i]['fileUrl'] == sql_test[i][5]:\n                        logger.info('fileUrl相等!')\n                        print(\"fileUrl相等,推送字段为%s,数据库为%s\" % (every_data['request']['content'][i]['fileUrl'], sql_test[i][5]))\n                    else:\n                        logger.info('fileUrl不相等!')\n                        print(\"fileUrl不相等,推送字段为%s,数据库为%s\" % (every_data['request']['content'][i]['fileUrl'], sql_test[i][5]))\n                    if every_data['request']['content'][i]['remark'] == sql_test[i][6]:\n                        logger.info('remark相等!')\n                        print(\"remark相等,推送字段为%s,数据库为%s\" % (every_data['request']['content'][i]['remark'], sql_test[i][6]))\n                    else:\n                        logger.info('remark不相等!')\n                        print(\"remark不相等,推送字段为%s,数据库为%s\" % (every_data['request']['content'][i]['remark'], sql_test[i][6]))\n                    assert (every_data['request']['aliOrderNo'] == sql_test[i][0] and every_data['request']['notifyInfoCode'] == sql_test[i][1] and every_data['request']['notifyEventTime'] == sql_test[i][2] and every_data['request']['content'][i]['fileType'] == sql_test[i][3] and every_data['request']['content'][i]['fileName'] == sql_test[i][4]\n                                and every_data['request']['content'][i]['fileName'] == sql_test[i][4] and every_data['request']['content'][i]['fileUrl'] == sql_test[i][5]\n                                and every_data['request']['content'][i]['remark'] == sql_test[i][6] )\n            else:\n    \n                logger.info('接口访问失败!')\n                print(\"接口访问失败，接口返回结果为\\n\",response.json())\n>               assert False\nE               assert False\n\ntest_request.py:109: AssertionError"}, "attachments": [{"name": "log", "source": "be485406-23ca-4865-8c05-deaf3a123080-attachment.txt", "type": "text/plain"}], "start": 1650248129641, "stop": 1650248129951, "uuid": "da68c5a0-0317-4e5b-9245-02c36daa1b9f", "historyId": "a23338435dbc3411194723054826de25", "testCaseId": "5e27f92fc2ed9258cd8b1e6bcc336a50", "fullName": "scripts.test_request.TestRequest#test_request_declartion", "labels": [{"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test_request"}, {"name": "subSuite", "value": "TestRequest"}, {"name": "host", "value": "WIN-20210819"}, {"name": "thread", "value": "20092-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test_request"}]}